// <auto-generated />
using System;
using ApiCrud.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApiCrud.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Interfocus.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("IdCidade")
                        .HasColumnType("integer");

                    b.Property<int>("IdContrato")
                        .HasColumnType("integer");

                    b.Property<int?>("IdEstado")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Interfocus.Models.Contrato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdCliente")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdEndereco")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdEquipamento")
                        .HasColumnType("uuid");

                    b.Property<int>("StatusContrato")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("Interfocus.Models.Funcionario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("Interfocus.Models.Ocorrencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Anexo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ocorrencias");
                });

            modelBuilder.Entity("Interfocus.Models.OcorrenciaOS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdOcorrencia")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdOrdemServico")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrdemServicoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("IdOcorrencia");

                    b.HasIndex("OrdemServicoId");

                    b.ToTable("OcorrenciasOS");
                });

            modelBuilder.Entity("Interfocus.Models.OrdemServico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataAgendamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdCliente")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdContrato")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdFuncionarioAbriu")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("IdFuncionarioFechou")
                        .HasColumnType("uuid");

                    b.Property<int>("IdStatusOS")
                        .HasColumnType("integer");

                    b.Property<Guid>("IdTipoServico")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("IdStatusOS");

                    b.ToTable("OrdensServico");
                });

            modelBuilder.Entity("Interfocus.Models.Plano", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Combo")
                        .HasColumnType("boolean");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("IdTipo")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Tier")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("IdTipo");

                    b.ToTable("Planos");
                });

            modelBuilder.Entity("Interfocus.Models.StatusOS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("StatusOS");
                });

            modelBuilder.Entity("Interfocus.Models.TipoPlano", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TiposPlano");
                });

            modelBuilder.Entity("Interfocus.Models.TipoServico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("IdContrato")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("IdContrato");

                    b.ToTable("TiposServico");
                });

            modelBuilder.Entity("Interfocus.Models.Contrato", b =>
                {
                    b.HasOne("Interfocus.Models.Cliente", "Cliente")
                        .WithMany("Contratos")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Interfocus.Models.OcorrenciaOS", b =>
                {
                    b.HasOne("Interfocus.Models.Ocorrencia", "Ocorrencia")
                        .WithMany()
                        .HasForeignKey("IdOcorrencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Interfocus.Models.OrdemServico", "OrdemServico")
                        .WithMany()
                        .HasForeignKey("OrdemServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ocorrencia");

                    b.Navigation("OrdemServico");
                });

            modelBuilder.Entity("Interfocus.Models.OrdemServico", b =>
                {
                    b.HasOne("Interfocus.Models.StatusOS", "StatusOS")
                        .WithMany()
                        .HasForeignKey("IdStatusOS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatusOS");
                });

            modelBuilder.Entity("Interfocus.Models.Plano", b =>
                {
                    b.HasOne("Interfocus.Models.TipoPlano", "TipoPlano")
                        .WithMany("Planos")
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoPlano");
                });

            modelBuilder.Entity("Interfocus.Models.TipoServico", b =>
                {
                    b.HasOne("Interfocus.Models.Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("IdContrato")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("Interfocus.Models.Cliente", b =>
                {
                    b.Navigation("Contratos");
                });

            modelBuilder.Entity("Interfocus.Models.TipoPlano", b =>
                {
                    b.Navigation("Planos");
                });
#pragma warning restore 612, 618
        }
    }
}
